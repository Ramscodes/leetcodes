// The link to this leetcode problem : https://leetcode.com/problems/next-greater-element-i/description/
/* This problem is about finding the next greater element in another array
 * For clear understanding go through the above leetcode link
 * We can solve this problem by using Stack and without stack
 * ->In the first solution we just used hashmap to make map between elements and their indexes
 *     and we iterate through the array which we should find next greater element and from the map
 *	   we can get the index of the current element in the search array we iterate that upto we find next greater-element
 * ->In the second solution we first find the greater element for every element in search array using stack and store them in map
 *		later we iterate through the array which we should find next greater element and 
 *		get the element value from map which is its next greater element.
 */
 
 
class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        HashMap<Integer,Integer> indexMap = new HashMap<>();
        int[] res = new int[nums1.length];
        for(int i=0;i<nums2.length;i++)
                indexMap.put(nums2[i],i);
        for(int i=0;i<nums1.length;i++){
            int index = indexMap.get(nums1[i]);
            int flag = -1;
            while(++index < nums2.length){
                    if(nums2[index] > nums1[i]){
                        flag = 1;
                        break;
                    }
            }
            res[i] = (flag == -1) ? -1 : nums2[index];
        }
        return res;
        /*HashMap<Integer,Integer> greaterElementMap = new HashMap<>();
        Stack<Integer> stack = new Stack<>();
        for(int i=0;i<nums2.length;i++){
            while(!stack.isEmpty() && nums2[i] > stack.peek()){
                greaterElementMap.put(stack.pop(),nums2[i]);
            }
            stack.push(nums2[i]);
        }
        for(int i=0;i<nums1.length;i++){
            nums1[i] = greaterElementMap.getOrDefault(nums1[i],-1);
        }
        return nums1;*/
    }
}
	
	