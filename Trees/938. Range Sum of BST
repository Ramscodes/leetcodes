/* This is a simple question about the traversal of BST and find out values which
   are in the range of low and high 
   ->we recursively traverse the tree and if the value is in range we add it otherwise
      we add 0
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        if(root == null) return 0;
        return ((root.val>=low && root.val<=high)?root.val:0) + rangeSumBST(root.left,low,high)+rangeSumBST(root.right,low,high);
    }
}